
/*  CKJ 5-10-15
    This sketch uses an 8-bit shift register, part number SN74HC595 from
    Texas Instruments.  It allows the control of up to 8 LEDs with just 3 pins
    on the Arduino.
  
    To help debug v4 (two registers), this v1 sketch simply displays the 16 LED
    segments in order.  This validates that the array contents registers[0]
    through [7] display the first numeral while [8] through [15] display the
    second numeral.  They do!
*/ 

int SRCLK_Pin = 4;  // pin 11 on the 75HC595 (Serial Clock, or shift pin)
// When this pin is pulled high, it will shift the register.
int SER_Pin = 8;     // pin 14 on the 75HC595 (Serial Pin or data pin)
// Input for the next pin that gets shifted in.
int RCLK_Pin = 6;    // pin 12 on the 75HC595 (Register Clock or latch pin)
// Needs to be pulled high to set the output to the new shift register values.
// This must be pulled high directly after SRCLK has gone LOW again.  (true?)


/* Multiple shift registers can be daisy-chained;
    they act as a single register, releasing all 
    their data together, still with the same 3 Arduino
    pins.  
    Pin 9 (QH-prime) on the first chip is connected to
    pin 14 (SER) of the second chip.  The shift and latch
    pins are connected together.
*/
   
// the next two lines used to be:
// #define number_of_74hc595s 1 
// #define numOfRegisterPins number_of_74hc595s * 8
const int registerQty = 2;
const int pinsQty = registerQty * 8;

// define an array to contain the LED states (on or off)
boolean registers[pinsQty];

// Function 1 of 2 needed: set all register pin values to LOW
void clearArray() {
  for(int i = pinsQty - 1; i >=  0; i--) {
     registers[i] = LOW;
  }
} 

// Function 2 of 2 needed: load and display registers
// call this only AFTER all values have been set
void writeRegisters() {

  digitalWrite(RCLK_Pin, LOW);      // tell the 75HC595 to begin reading

  for(int i = pinsQty - 1; i >=  0; i--) {
    digitalWrite(SRCLK_Pin, LOW);   // here comes data for the next LED
    int val = registers[i];         // load an array value (1 bit of data)
    digitalWrite(SER_Pin, val);     // send that value to the 75HC595
    digitalWrite(SRCLK_Pin, HIGH);  // end of data for that LED
  }

  digitalWrite(RCLK_Pin, HIGH);     // tell the 75HC595 to release all the data
                                    // (display all LED values or states)
}


void setup() {
  pinMode(SRCLK_Pin, OUTPUT);        // clock pin
  pinMode(SER_Pin, OUTPUT);          // data pin
  pinMode(RCLK_Pin, OUTPUT);         // latch pin

// reset all register pins (all LEDs off)
  clearArray();
  writeRegisters();
  delay(1000);
}               


void loop() {

// cycle through all 16 LED segments

for (int seg=0; seg <= 15; seg++) {
  registers[seg] = HIGH;
  writeRegisters();        // display all the states!
  delay(1000);
   clearArray();
  writeRegisters();
  delay(500);
  }
}


